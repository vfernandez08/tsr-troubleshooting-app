
// Main JavaScript for TSR Troubleshooting Application
console.log("Main.js loaded");

document.addEventListener('DOMContentLoaded', function() {
    // Load recommendations for Step 3 (EXECUTE_TROUBLESHOOTING)
    if (window.location.pathname.includes('/troubleshoot') && 
        document.getElementById('recommendationsContainer')) {
        loadRecommendations();
    }
});

function loadRecommendations() {
    const container = document.getElementById('recommendationsContainer');
    if (!container) return;
    
    // Show loading state
    container.innerHTML = `
        <div class="text-center">
            <i class="fas fa-spinner fa-spin me-2"></i>
            Loading recommendations...
        </div>
    `;
    
    // Fetch recommendations from server
    fetch('/get_recommendations')
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                displayRecommendations(data.selections);
            } else {
                container.innerHTML = `
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        Unable to load recommendations. Please continue with standard troubleshooting.
                    </div>
                `;
            }
        })
        .catch(error => {
            console.error('Error loading recommendations:', error);
            container.innerHTML = `
                <div class="alert alert-info">
                    <h6><i class="fas fa-list me-2"></i>Standard Troubleshooting Steps</h6>
                    <ol class="mb-2">
                        <li>Power cycle both ONT and router</li>
                        <li>Test device closer to router for better signal</li>
                        <li>Check for background downloads or streaming on other devices</li>
                        <li>Restart customer device and reconnect to WiFi</li>
                    </ol>
                    <small class="text-muted">Default recommendations loaded</small>
                </div>
            `;
        });
}

function displayRecommendations(selections) {
    const container = document.getElementById('recommendationsContainer');
    if (!container) return;
    
    // Use the recommendations engine to get specific steps
    const recommendations = window.RecommendationEngine ? window.RecommendationEngine.getRecommendations(selections) : [];
    
    if (recommendations && recommendations.length > 0) {
        let html = `
            <div class="alert alert-success">
                <h6><i class="fas fa-lightbulb me-2"></i>Recommended Troubleshooting Steps</h6>
                <ol class="mb-2">
        `;
        
        recommendations.forEach(rec => {
            html += `<li>${rec}</li>`;
        });
        
        html += `
                </ol>
                <small class="text-muted">Generated by Rule-based Engine using WiFi and speed test data</small>
            </div>
        `;
        
        container.innerHTML = html;
    } else {
        // Fallback recommendations
        container.innerHTML = `
            <div class="alert alert-info">
                <h6><i class="fas fa-list me-2"></i>Standard Troubleshooting Steps</h6>
                <ol class="mb-2">
                    <li>Power cycle both ONT and router</li>
                    <li>Test device closer to router for better signal</li>
                    <li>Check for background downloads or streaming on other devices</li>
                    <li>Restart customer device and reconnect to WiFi</li>
                </ol>
                <small class="text-muted">Standard recommendations loaded</small>
            </div>
        `;
    }
}

// Copy functions for dispatch summaries
function copyDispatchInfo() {
    const dispatchElement = document.getElementById('dispatchInfo');
    if (dispatchElement) {
        const dispatchText = dispatchElement.innerText;
        navigator.clipboard.writeText(dispatchText).then(function() {
            alert('Dispatch information copied to clipboard!');
        }).catch(function(err) {
            console.error('Could not copy text: ', err);
            alert('Dispatch information copied to clipboard!');
        });
    }
}

function copyTeamsSummary() {
    const summaryElement = document.getElementById('dispatchSummary');
    if (summaryElement) {
        const summaryText = summaryElement.value;
        navigator.clipboard.writeText(summaryText).then(function() {
            alert('Teams summary copied to clipboard! Ready to paste into Teams.');
        }).catch(function(err) {
            console.error('Could not copy text: ', err);
            alert('Teams summary copied to clipboard! Ready to paste into Teams.');
        });
    }
}

// Session management
function saveSessionData(stepId, data) {
    const sessionData = JSON.parse(localStorage.getItem('tsr_session') || '{}');
    sessionData[stepId] = data;
    sessionData.lastUpdated = new Date().toISOString();
    localStorage.setItem('tsr_session', JSON.stringify(sessionData));
}

function getSessionData(stepId) {
    const sessionData = JSON.parse(localStorage.getItem('tsr_session') || '{}');
    return sessionData[stepId] || {};
}

function clearSessionData() {
    localStorage.removeItem('tsr_session');
}
